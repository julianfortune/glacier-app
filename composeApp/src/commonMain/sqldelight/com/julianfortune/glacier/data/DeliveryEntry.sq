CREATE TABLE DeliveryEntry (
    id INTEGER PRIMARY KEY,
    deliveryId INTEGER NOT NULL,
    itemId INTEGER NOT NULL,
    itemCount INTEGER NOT NULL,

    costStatus TEXT CHECK( costStatus IN ('PURCHASED', 'NO_COST') ) NOT NULL,
    itemCostCents INTEGER NOT NULL,

    -- (Optional) Keep track of a 'logical' 'aggregation' of items used for display but ignored for calculations
    aggregateLabel TEXT,
    aggregateCount INTEGER,

    FOREIGN KEY(deliveryId) REFERENCES Delivery(id),
    FOREIGN KEY(itemId) REFERENCES Item(id),

    -- Aggregation is optional as a mutual pair--either both present or both null
    CHECK((aggregateLabel IS NULL AND aggregateCount IS NULL) OR (aggregateLabel IS NOT NULL AND aggregateCount IS NOT NULL))
);

-- QUERIES
getAll:
SELECT * FROM DeliveryEntry;

getById:
SELECT * FROM DeliveryEntry WHERE id = :id LIMIT 1;

getByDeliveryId:
SELECT * FROM DeliveryEntry WHERE deliveryId = :deliveryId;

deleteById:
DELETE FROM DeliveryEntry WHERE id = :id;

deleteAll:
DELETE FROM DeliveryEntry;

insert:
INSERT INTO DeliveryEntry (
    deliveryId,
    itemId,
    itemCount,
    costStatus,
    itemCostCents,
    aggregateLabel,
    aggregateCount
) VALUES (
    :deliveryId,
    :itemId,
    :itemCount,
    :costStatus,
    :itemCostCents,
    :aggregateLabel,
    :aggregateCount
);

-- TODO: Inserts...

-- TODO: SEED DATA ...
